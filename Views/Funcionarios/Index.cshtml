@model IEnumerable<InfnetMVC.Models.Funcionario>

@{
    ViewData["Title"] = "Funcionários";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create">Criar Funcionário</a>
</p>

<!-- Adicionando o campo de busca -->
<div class="input-group mb-3">
    <input type="text" id="searchInput" class="form-control" placeholder="Buscar por nome de funcionário" aria-label="Buscar por nome de funcionário" aria-describedby="button-addon2">
    <div class="input-group-append">
        <button class="btn btn-primary" type="button" id="searchButton">Buscar</button>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Endereco)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Telefone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataNascimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Departamento)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tableBody">
        <!-- Aqui você pode adicionar as linhas da tabela com os dados dos funcionários -->
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Endereco)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Telefone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNascimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Departamento.Local)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Detalhes</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Excluir</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        // Capturando os elementos HTML do campo de busca e do botão de busca
        var searchInput = document.getElementById('searchInput');
        var searchButton = document.getElementById('searchButton');

        // Adicionando um ouvinte de evento para o clique no botão de busca
        searchButton.addEventListener('click', function () {
            // Obtendo o valor digitado no campo de busca
            var searchValue = searchInput.value.toLowerCase();

            // Obtendo todas as linhas da tabela
            var tableRows = document.querySelectorAll('#tableBody tr');

            // Iterando sobre as linhas da tabela
            tableRows.forEach(function (row) {
                // Obtendo o nome do funcionário na linha atual
                var employeeName = row.querySelector('td:first-child').innerText.toLowerCase();

                // Verificando se o nome do funcionário corresponde ao termo de busca
                if (employeeName.includes(searchValue)) {
                    // Exibindo a linha da tabela se o nome corresponder
                    row.style.display = '';
                } else {
                    // Ocultando a linha da tabela se o nome não corresponder
                    row.style.display = 'none';
                }
            });
        });
    </script>
}
